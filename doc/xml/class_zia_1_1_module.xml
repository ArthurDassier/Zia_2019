<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_zia_1_1_module" kind="class" language="C++" prot="public">
    <compoundname>Zia::Module</compoundname>
    <includes refid="_module_8hpp" local="no">Module.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_zia_1_1_module_1aa33983005d647a67707863c50828e5ad" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Zia::Module::_name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/Module.hpp" line="54" column="1" bodyfile="src/server/Module.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_zia_1_1_module_1a7b68752109213ffbe3ddcb556adb7763" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Zia::Module::_path</definition>
        <argsstring></argsstring>
        <name>_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/Module.hpp" line="55" column="1" bodyfile="src/server/Module.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_zia_1_1_module_1a4e5330e20703c939d940afe737bd4d1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Module::Module</definition>
        <argsstring>(const cfg::FileDescriptor &amp;path)</argsstring>
        <name>Module</name>
        <param>
          <type>const <ref refid="namespacecfg_1af0aed6e47bd26e91ad7d69467f96caaf" kindref="member">cfg::FileDescriptor</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="class_zia_1_1_module" kindref="compound">Module</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>File descriptor of the module library. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/Module.hpp" line="25" column="1" bodyfile="src/server/Module.cpp" bodystart="12" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="class_zia_1_1_module_1a91f712e682b2b949656b90796879d8b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Zia::Module::~Module</definition>
        <argsstring>()=default</argsstring>
        <name>~Module</name>
        <briefdescription>
<para>Destroy the <ref refid="class_zia_1_1_module" kindref="compound">Module</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/Module.hpp" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_zia_1_1_module_1ac0eaf9796e9cb65c279743f3c6377b1b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string Module::getName</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getName</name>
        <briefdescription>
<para>Get the module&apos;s name. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="class_zia_1_1_module" kindref="compound">Module</ref>&apos;s name. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/Module.hpp" line="37" column="1" bodyfile="src/server/Module.cpp" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="class_zia_1_1_module_1a93f4a37a5e91739c2584292e540d6dff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string Module::getName</definition>
        <argsstring>(const cfg::FileDescriptor &amp;file) const</argsstring>
        <name>getName</name>
        <param>
          <type>const <ref refid="namespacecfg_1af0aed6e47bd26e91ad7d69467f96caaf" kindref="member">cfg::FileDescriptor</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Generate the module&apos;s name from a file descriptor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Generated module name. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/Module.hpp" line="44" column="1" bodyfile="src/server/Module.cpp" bodystart="23" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_zia_1_1_module_1ae9e284d2b324100926271ca383704552" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string Module::getPath</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getPath</name>
        <briefdescription>
<para>Get the module&apos;s library path. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="class_zia_1_1_module" kindref="compound">Module</ref>&apos;s library path. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server/Module.hpp" line="51" column="1" bodyfile="src/server/Module.cpp" bodystart="33" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_zia_1_1_module" kindref="compound">Module</ref> class to manage the modules. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/server/Module.hpp" line="18" column="1" bodyfile="src/server/Module.hpp" bodystart="17" bodyend="56"/>
    <listofallmembers>
      <member refid="class_zia_1_1_module_1aa33983005d647a67707863c50828e5ad" prot="private" virt="non-virtual"><scope>Zia::Module</scope><name>_name</name></member>
      <member refid="class_zia_1_1_module_1a7b68752109213ffbe3ddcb556adb7763" prot="private" virt="non-virtual"><scope>Zia::Module</scope><name>_path</name></member>
      <member refid="class_zia_1_1_module_1ac0eaf9796e9cb65c279743f3c6377b1b" prot="public" virt="non-virtual"><scope>Zia::Module</scope><name>getName</name></member>
      <member refid="class_zia_1_1_module_1a93f4a37a5e91739c2584292e540d6dff" prot="public" virt="non-virtual"><scope>Zia::Module</scope><name>getName</name></member>
      <member refid="class_zia_1_1_module_1ae9e284d2b324100926271ca383704552" prot="public" virt="non-virtual"><scope>Zia::Module</scope><name>getPath</name></member>
      <member refid="class_zia_1_1_module_1a4e5330e20703c939d940afe737bd4d1b" prot="public" virt="non-virtual"><scope>Zia::Module</scope><name>Module</name></member>
      <member refid="class_zia_1_1_module_1a91f712e682b2b949656b90796879d8b1" prot="public" virt="non-virtual"><scope>Zia::Module</scope><name>~Module</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
