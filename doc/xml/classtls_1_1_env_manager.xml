<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtls_1_1_env_manager" kind="class" language="C++" prot="public">
    <compoundname>tls::EnvManager</compoundname>
    <includes refid="_env_manager_8hpp" local="no">EnvManager.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtls_1_1_env_manager_1a3c0915eae50109e172790b47a100f53b" prot="private" static="no" mutable="no">
        <type><ref refid="namespacetls_1a4e8d32383e204ee25990db65651ea712" kindref="member">json</ref></type>
        <definition>json tls::EnvManager::_config</definition>
        <argsstring></argsstring>
        <name>_config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/EnvManager.hpp" line="64" column="1" bodyfile="src/utils/EnvManager.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtls_1_1_env_manager_1ae139973576ff0addac7cc5f876e085ca" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string tls::EnvManager::_cwd</definition>
        <argsstring></argsstring>
        <name>_cwd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/EnvManager.hpp" line="65" column="1" bodyfile="src/utils/EnvManager.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtls_1_1_env_manager_1ae683e94c1206cec92b2775f765525f15" prot="private" static="no" mutable="no">
        <type><ref refid="classtls_1_1_json_loader" kindref="compound">JsonLoader</ref></type>
        <definition>JsonLoader tls::EnvManager::_loader</definition>
        <argsstring></argsstring>
        <name>_loader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/EnvManager.hpp" line="66" column="1" bodyfile="src/utils/EnvManager.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtls_1_1_env_manager_1a7263f67578810770eafbebb5b71f7b6b" prot="private" static="no" mutable="no">
        <type>std::filesystem::path</type>
        <definition>std::filesystem::path tls::EnvManager::_config_path</definition>
        <argsstring></argsstring>
        <name>_config_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/EnvManager.hpp" line="67" column="1" bodyfile="src/utils/EnvManager.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtls_1_1_env_manager_1a73654081360600e2dd650eea02f82a23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EnvManager::EnvManager</definition>
        <argsstring>()</argsstring>
        <name>EnvManager</name>
        <briefdescription>
<para>Construct a new <ref refid="classtls_1_1_env_manager" kindref="compound">EnvManager</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/EnvManager.hpp" line="25" column="1" bodyfile="src/utils/EnvManager.cpp" bodystart="12" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classtls_1_1_env_manager_1ad603a242e488ddbda5a54b23aefe2013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EnvManager::EnvManager</definition>
        <argsstring>(const std::filesystem::path &amp;config_path)</argsstring>
        <name>EnvManager</name>
        <param>
          <type>const std::filesystem::path &amp;</type>
          <declname>config_path</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classtls_1_1_env_manager" kindref="compound">EnvManager</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to a json configuration file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/EnvManager.hpp" line="32" column="1" bodyfile="src/utils/EnvManager.cpp" bodystart="18" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classtls_1_1_env_manager_1aaff18dcf5a41cefdaa1a5b2123a456a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tls::EnvManager::~EnvManager</definition>
        <argsstring>()=default</argsstring>
        <name>~EnvManager</name>
        <briefdescription>
<para>Destroy the <ref refid="classtls_1_1_env_manager" kindref="compound">EnvManager</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/EnvManager.hpp" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtls_1_1_env_manager_1ad48562c6efa024230850b73d9d6361fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EnvManager::loadEnv</definition>
        <argsstring>(const std::filesystem::path &amp;config_path=&quot;&quot;)</argsstring>
        <name>loadEnv</name>
        <param>
          <type>const std::filesystem::path &amp;</type>
          <declname>config_path</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Set a list of environment variable from a json file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config_path</parametername>
</parameternamelist>
<parameterdescription>
<para>File where the environment variables are described. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/EnvManager.hpp" line="61" column="1" bodyfile="src/utils/EnvManager.cpp" bodystart="41" bodyend="56"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtls_1_1_env_manager_1a560e9c9885ae4e656eb7121adc4cbc9a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EnvManager::setEnv</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;value)</argsstring>
        <name>setEnv</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set an environment variable. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the variable. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the variable. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/EnvManager.hpp" line="45" column="1" bodyfile="src/utils/EnvManager.cpp" bodystart="25" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classtls_1_1_env_manager_1a505529a47f05f2450594da617d627936" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string EnvManager::getEnv</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>getEnv</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get an environment variable. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the variable to retrieve.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of the found environment variable. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/EnvManager.hpp" line="54" column="1" bodyfile="src/utils/EnvManager.cpp" bodystart="31" bodyend="39"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classtls_1_1_env_manager" kindref="compound">EnvManager</ref> class to manage environment variables. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/utils/EnvManager.hpp" line="20" column="1" bodyfile="src/utils/EnvManager.hpp" bodystart="19" bodyend="68"/>
    <listofallmembers>
      <member refid="classtls_1_1_env_manager_1a3c0915eae50109e172790b47a100f53b" prot="private" virt="non-virtual"><scope>tls::EnvManager</scope><name>_config</name></member>
      <member refid="classtls_1_1_env_manager_1a7263f67578810770eafbebb5b71f7b6b" prot="private" virt="non-virtual"><scope>tls::EnvManager</scope><name>_config_path</name></member>
      <member refid="classtls_1_1_env_manager_1ae139973576ff0addac7cc5f876e085ca" prot="private" virt="non-virtual"><scope>tls::EnvManager</scope><name>_cwd</name></member>
      <member refid="classtls_1_1_env_manager_1ae683e94c1206cec92b2775f765525f15" prot="private" virt="non-virtual"><scope>tls::EnvManager</scope><name>_loader</name></member>
      <member refid="classtls_1_1_env_manager_1a73654081360600e2dd650eea02f82a23" prot="public" virt="non-virtual"><scope>tls::EnvManager</scope><name>EnvManager</name></member>
      <member refid="classtls_1_1_env_manager_1ad603a242e488ddbda5a54b23aefe2013" prot="public" virt="non-virtual"><scope>tls::EnvManager</scope><name>EnvManager</name></member>
      <member refid="classtls_1_1_env_manager_1a505529a47f05f2450594da617d627936" prot="public" virt="non-virtual"><scope>tls::EnvManager</scope><name>getEnv</name></member>
      <member refid="classtls_1_1_env_manager_1ad48562c6efa024230850b73d9d6361fb" prot="public" virt="non-virtual"><scope>tls::EnvManager</scope><name>loadEnv</name></member>
      <member refid="classtls_1_1_env_manager_1a560e9c9885ae4e656eb7121adc4cbc9a" prot="public" virt="non-virtual"><scope>tls::EnvManager</scope><name>setEnv</name></member>
      <member refid="classtls_1_1_env_manager_1aaff18dcf5a41cefdaa1a5b2123a456a0" prot="public" virt="non-virtual"><scope>tls::EnvManager</scope><name>~EnvManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
