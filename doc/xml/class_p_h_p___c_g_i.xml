<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_p_h_p___c_g_i" kind="class" language="C++" prot="public">
    <compoundname>PHP_CGI</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IModule</basecompoundref>
    <includes refid="_p_h_p_module_8hpp" local="no">PHPModule.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_p_h_p___c_g_i_1a4ce89837013dbd5836475cbded08dee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PHP_CGI::PHP_CGI</definition>
        <argsstring>()=default</argsstring>
        <name>PHP_CGI</name>
        <briefdescription>
<para>Default constructor for the php module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/PHP/PHPModule.hpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_p_h_p___c_g_i_1a6446691803801b4100f18bcd53899237" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* PHP_CGI::getName</definition>
        <argsstring>(void) const</argsstring>
        <name>getName</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the name of the module. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The name of the module </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/PHP/PHPModule.hpp" line="53" column="1" bodyfile="src/modules/PHP/PHPModule.hpp" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_p_h_p___c_g_i_1a5f85735822d4cb288b34182d43b2d059" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void PHP_CGI::onRegisterCallbacks</definition>
        <argsstring>(oZ::Pipeline &amp;pipeline)</argsstring>
        <name>onRegisterCallbacks</name>
        <param>
          <type>oZ::Pipeline &amp;</type>
          <declname>pipeline</declname>
        </param>
        <briefdescription>
<para>Fct for the pipeline (load in the right place in the right position) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pipeline</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference on the pipeline where the module is load </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/PHP/PHPModule.hpp" line="60" column="1" bodyfile="src/modules/PHP/PHPModule.cpp" bodystart="14" bodyend="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_p_h_p___c_g_i_1ae4572902e2258f41f38719f6666bd00e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PHP_CGI::execPHP</definition>
        <argsstring>(oZ::Context &amp;context)</argsstring>
        <name>execPHP</name>
        <param>
          <type>oZ::Context &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Execute the php find in the index and set the context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context given by the server</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bool to know if nothing wrong happened </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/PHP/PHPModule.hpp" line="70" column="1" bodyfile="src/modules/PHP/PHPModule.cpp" bodystart="58" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_p_h_p___c_g_i_1ad4677c3d93be722dc7d4d9ed5470837c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PHP_CGI::findPHP</definition>
        <argsstring>(const oZ::Context &amp;context)</argsstring>
        <name>findPHP</name>
        <param>
          <type>const oZ::Context &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Search if there&apos;s php in the context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context given by the server</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if php is find and false if not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/PHP/PHPModule.hpp" line="79" column="1" bodyfile="src/modules/PHP/PHPModule.cpp" bodystart="121" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_p_h_p___c_g_i_1aeaa445eb27eeab2c2112ac3e6055eee5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char **</type>
        <definition>const char ** PHP_CGI::makeEnvironment</definition>
        <argsstring>(const oZ::Context &amp;context)</argsstring>
        <name>makeEnvironment</name>
        <param>
          <type>const oZ::Context &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Create a temp env for exec the php. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context given by the server</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The env created </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/PHP/PHPModule.hpp" line="88" column="1" bodyfile="src/modules/PHP/PHPModule.cpp" bodystart="24" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_p_h_p___c_g_i" kindref="compound">PHP_CGI</ref> class to manage the PHP module. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="27">
        <label>PHP_CGI</label>
        <link refid="class_p_h_p___c_g_i"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>oZ::IModule</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="29">
        <label>PHP_CGI</label>
        <link refid="class_p_h_p___c_g_i"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>oZ::IModule</label>
      </node>
    </collaborationgraph>
    <location file="src/modules/PHP/PHPModule.hpp" line="41" column="1" bodyfile="src/modules/PHP/PHPModule.hpp" bodystart="40" bodyend="89"/>
    <listofallmembers>
      <member refid="class_p_h_p___c_g_i_1ae4572902e2258f41f38719f6666bd00e" prot="private" virt="non-virtual"><scope>PHP_CGI</scope><name>execPHP</name></member>
      <member refid="class_p_h_p___c_g_i_1ad4677c3d93be722dc7d4d9ed5470837c" prot="private" virt="non-virtual"><scope>PHP_CGI</scope><name>findPHP</name></member>
      <member refid="class_p_h_p___c_g_i_1a6446691803801b4100f18bcd53899237" prot="public" virt="virtual"><scope>PHP_CGI</scope><name>getName</name></member>
      <member refid="class_p_h_p___c_g_i_1aeaa445eb27eeab2c2112ac3e6055eee5" prot="private" virt="non-virtual"><scope>PHP_CGI</scope><name>makeEnvironment</name></member>
      <member refid="class_p_h_p___c_g_i_1a5f85735822d4cb288b34182d43b2d059" prot="public" virt="virtual"><scope>PHP_CGI</scope><name>onRegisterCallbacks</name></member>
      <member refid="class_p_h_p___c_g_i_1a4ce89837013dbd5836475cbded08dee7" prot="public" virt="non-virtual"><scope>PHP_CGI</scope><name>PHP_CGI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
