<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtls_1_1_json_loader" kind="class" language="C++" prot="public">
    <compoundname>tls::JsonLoader</compoundname>
    <includes refid="_json_loader_8hpp" local="no">JsonLoader.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtls_1_1_json_loader_1afd9a33b3305da0b155772e171884f1e0" prot="private" static="no" mutable="no">
        <type><ref refid="namespacetls_1a4e8d32383e204ee25990db65651ea712" kindref="member">json</ref></type>
        <definition>json tls::JsonLoader::_json</definition>
        <argsstring></argsstring>
        <name>_json</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/JsonLoader.hpp" line="83" column="1" bodyfile="src/utils/JsonLoader.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtls_1_1_json_loader_1adbbbb94f7588404b34b36542d30f3e67" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tls::JsonLoader::_hasLoaded</definition>
        <argsstring></argsstring>
        <name>_hasLoaded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/JsonLoader.hpp" line="84" column="1" bodyfile="src/utils/JsonLoader.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtls_1_1_json_loader_1a9f9fc1f46e82b4f377b22c8acf0f3b9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>JsonLoader::JsonLoader</definition>
        <argsstring>()</argsstring>
        <name>JsonLoader</name>
        <briefdescription>
<para>Construct a new <ref refid="classtls_1_1_json_loader" kindref="compound">JsonLoader</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/JsonLoader.hpp" line="31" column="1" bodyfile="src/utils/JsonLoader.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classtls_1_1_json_loader_1ad6ec799a31fbae8ea01a9d6c278ad6e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>JsonLoader::JsonLoader</definition>
        <argsstring>(const std::filesystem::path &amp;path)</argsstring>
        <name>JsonLoader</name>
        <param>
          <type>const std::filesystem::path &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classtls_1_1_json_loader" kindref="compound">JsonLoader</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the json file to load. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/JsonLoader.hpp" line="38" column="1" bodyfile="src/utils/JsonLoader.cpp" bodystart="17" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classtls_1_1_json_loader_1a0826d5c9480c38d010fe580101d916e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>JsonLoader::JsonLoader</definition>
        <argsstring>(const json &amp;object)</argsstring>
        <name>JsonLoader</name>
        <param>
          <type>const <ref refid="namespacetls_1a4e8d32383e204ee25990db65651ea712" kindref="member">json</ref> &amp;</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classtls_1_1_json_loader" kindref="compound">JsonLoader</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>Json object to load. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/JsonLoader.hpp" line="45" column="1" bodyfile="src/utils/JsonLoader.cpp" bodystart="23" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classtls_1_1_json_loader_1a2d493a7049c70e6974a3daf2ef2e71f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tls::JsonLoader::~JsonLoader</definition>
        <argsstring>()=default</argsstring>
        <name>~JsonLoader</name>
        <briefdescription>
<para>Destroy the <ref refid="classtls_1_1_json_loader" kindref="compound">JsonLoader</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/JsonLoader.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtls_1_1_json_loader_1ad587735dbb8e8cfc5cd002a0aa9a7d7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void JsonLoader::load</definition>
        <argsstring>(const std::filesystem::path &amp;path)</argsstring>
        <name>load</name>
        <param>
          <type>const std::filesystem::path &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Load a json from a given json file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the json file to load. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/JsonLoader.hpp" line="57" column="1" bodyfile="src/utils/JsonLoader.cpp" bodystart="29" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classtls_1_1_json_loader_1a0174b44e635a44811616c394d89b73e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespacetls_1a4e8d32383e204ee25990db65651ea712" kindref="member">json</ref></type>
        <definition>const json JsonLoader::get</definition>
        <argsstring>(const std::string &amp;to_get) const</argsstring>
        <name>get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>to_get</declname>
        </param>
        <briefdescription>
<para>Get data from the json previously loaded. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>to_get</parametername>
</parameternamelist>
<parameterdescription>
<para>Data key in the json.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Data if found otherwise null json object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/JsonLoader.hpp" line="66" column="1" bodyfile="src/utils/JsonLoader.cpp" bodystart="37" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classtls_1_1_json_loader_1aef4c88eb0589673f806e7fedf7b3b6b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespacetls_1a4e8d32383e204ee25990db65651ea712" kindref="member">json</ref></type>
        <definition>const json JsonLoader::getJson</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getJson</name>
        <briefdescription>
<para>Get all json file content deserialized. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Json object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/JsonLoader.hpp" line="73" column="1" bodyfile="src/utils/JsonLoader.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classtls_1_1_json_loader_1ac7fa5168de0714b4ab4cf3f7f366dbdf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const bool</type>
        <definition>const bool JsonLoader::hasLoaded</definition>
        <argsstring>() const noexcept</argsstring>
        <name>hasLoaded</name>
        <briefdescription>
<para>Check if a json file has already been loaded. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if a file has been loaded otherwise false. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/JsonLoader.hpp" line="80" column="1" bodyfile="src/utils/JsonLoader.cpp" bodystart="54" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classtls_1_1_json_loader" kindref="compound">JsonLoader</ref> class to manage a json file. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/utils/JsonLoader.hpp" line="26" column="1" bodyfile="src/utils/JsonLoader.hpp" bodystart="25" bodyend="85"/>
    <listofallmembers>
      <member refid="classtls_1_1_json_loader_1adbbbb94f7588404b34b36542d30f3e67" prot="private" virt="non-virtual"><scope>tls::JsonLoader</scope><name>_hasLoaded</name></member>
      <member refid="classtls_1_1_json_loader_1afd9a33b3305da0b155772e171884f1e0" prot="private" virt="non-virtual"><scope>tls::JsonLoader</scope><name>_json</name></member>
      <member refid="classtls_1_1_json_loader_1a0174b44e635a44811616c394d89b73e5" prot="public" virt="non-virtual"><scope>tls::JsonLoader</scope><name>get</name></member>
      <member refid="classtls_1_1_json_loader_1aef4c88eb0589673f806e7fedf7b3b6b9" prot="public" virt="non-virtual"><scope>tls::JsonLoader</scope><name>getJson</name></member>
      <member refid="classtls_1_1_json_loader_1ac7fa5168de0714b4ab4cf3f7f366dbdf" prot="public" virt="non-virtual"><scope>tls::JsonLoader</scope><name>hasLoaded</name></member>
      <member refid="classtls_1_1_json_loader_1a9f9fc1f46e82b4f377b22c8acf0f3b9d" prot="public" virt="non-virtual"><scope>tls::JsonLoader</scope><name>JsonLoader</name></member>
      <member refid="classtls_1_1_json_loader_1ad6ec799a31fbae8ea01a9d6c278ad6e3" prot="public" virt="non-virtual"><scope>tls::JsonLoader</scope><name>JsonLoader</name></member>
      <member refid="classtls_1_1_json_loader_1a0826d5c9480c38d010fe580101d916e0" prot="public" virt="non-virtual"><scope>tls::JsonLoader</scope><name>JsonLoader</name></member>
      <member refid="classtls_1_1_json_loader_1ad587735dbb8e8cfc5cd002a0aa9a7d7f" prot="public" virt="non-virtual"><scope>tls::JsonLoader</scope><name>load</name></member>
      <member refid="classtls_1_1_json_loader_1a2d493a7049c70e6974a3daf2ef2e71f9" prot="public" virt="non-virtual"><scope>tls::JsonLoader</scope><name>~JsonLoader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
